{
		"scope" : "source.pythonAPI.cinema4D",
		"completions" : [
 				{"trigger": "c4d.SplineData", "contents" : "SplineData"},
				{"trigger": "SplineData.__init__([v])", "contents" : "__init__( ${1:[v]})"},
				{"trigger": "SplineData.SelectAll()", "contents" : "SelectAll()"},
				{"trigger": "SplineData.Flip()", "contents" : "Flip()"},
				{"trigger": "SplineData.Mirror()", "contents" : "Mirror()"},
				{"trigger": "SplineData.SetRound(r)", "contents" : "SetRound(${1:r})"},
				{"trigger": "SplineData.GetRound()", "contents" : "GetRound()"},
				{"trigger": "SplineData.Maximum()", "contents" : "Maximum()"},
				{"trigger": "SplineData.Minimum()", "contents" : "Minimum()"},
				{"trigger": "SplineData.SetZero(bY, bAll)", "contents" : "SetZero(${1:bY}, ${2:bAll})"},
				{"trigger": "SplineData.InitDefaultFlag(flag)", "contents" : "InitDefaultFlag(${1:flag})"},
				{"trigger": "SplineData.DeleteAllPoints()", "contents" : "DeleteAllPoints()"},
				{"trigger": "SplineData.MakePointBuffer([lPoints=-1])", "contents" : "MakePointBuffer( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeLinearSplineLinear([lPoints=-1])", "contents" : "MakeLinearSplineLinear( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeLinearSplineBezier([lPoints=-1])", "contents" : "MakeLinearSplineBezier( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeSquareSpline([lPoints=-1])", "contents" : "MakeSquareSpline( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeCubicSpline([lPoints=-1])", "contents" : "MakeCubicSpline( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeRootSpline([lPoints=-1])", "contents" : "MakeRootSpline( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeInversSpline([lPoints=-1])", "contents" : "MakeInversSpline( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeSinSpline([lPoints=-1])", "contents" : "MakeSinSpline( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeAbsCosSpline([lPoints=-1])", "contents" : "MakeAbsCosSpline( ${1:[lPoints=-1]})"},
				{"trigger": "SplineData.MakeUserSpline(str, lPoints)", "contents" : "MakeUserSpline(${1:str}, ${2:lPoints})"},
				{"trigger": "SplineData.DeleteKnot(a)", "contents" : "DeleteKnot(${1:a})"},
				{"trigger": "SplineData.InsertKnot(x, y[, flags=0])", "contents" : "InsertKnot(${1:x}, ${2:y} ${3:[, flags=0]})"},
				{"trigger": "SplineData.GetKnots()", "contents" : "GetKnots()"},
				{"trigger": "SplineData.SetKnot(index[, vPos][, lFlagsSettings][, bSelect=False][, vTangentLeft][, vTangentRight][, interpol=CustomSplineKnotInterpolationBezier])", "contents" : "SetKnot(${1:index} ${2:[, vPos]} ${3:[, lFlagsSettings]} ${4:[, bSelect=False]} ${5:[, vTangentLeft]} ${6:[, vTangentRight]} ${7:[, interpol=CustomSplineKnotInterpolationBezier]})"},
				{"trigger": "SplineData.GetPoint(r)", "contents" : "GetPoint(${1:r})"},
				{"trigger": "SplineData.GetSelectedCount()", "contents" : "GetSelectedCount()"},
				{"trigger": "SplineData.GetKnotCount()", "contents" : "GetKnotCount()"},
				{"trigger": "SplineData.GetRange()", "contents" : "GetRange()"},
				{"trigger": "SplineData.SortKnots()", "contents" : "SortKnots()"},
				{"trigger": "SplineData.SetRange(xmin, xmax, xsteps, ymin, ymax, ysteps)", "contents" : "SetRange(${1:xmin}, ${2:xmax}, ${3:xsteps}, ${4:ymin}, ${5:ymax}, ${6:ysteps})"},
				{"trigger": "SplineData.AdaptRange(xmin, xmax, xsteps, ymin, ymax, ysteps)", "contents" : "AdaptRange(${1:xmin}, ${2:xmax}, ${3:xsteps}, ${4:ymin}, ${5:ymax}, ${6:ysteps})"},
				{"trigger": "SplineData.CopyTo(pDest)", "contents" : "CopyTo(${1:pDest})"},
  				{ "trigger": "____zdummy", "contents": "_____zdummy" } 
		]
}