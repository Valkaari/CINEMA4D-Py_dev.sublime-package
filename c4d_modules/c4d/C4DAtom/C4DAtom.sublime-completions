{
		"scope" : "source.pythonAPI.cinema4D",
		"completions" : [
 				{"trigger": "c4d.C4DAtom", "contents" : "C4DAtom"},
				{"trigger": "C4DAtom.__eq__(self, other)", "contents" : "__eq__(${1:self}, ${2:other})"},
				{"trigger": "C4DAtom.__ne__(self, other)", "contents" : "__ne__(${1:self}, ${2:other})"},
				{"trigger": "C4DAtom.__call__()", "contents" : "__call__()"},
				{"trigger": "C4DAtom.SetDirty(flags)", "contents" : "SetDirty(${1:flags})"},
				{"trigger": "C4DAtom.GetDirty(flags)", "contents" : "GetDirty(${1:flags})"},
				{"trigger": "C4DAtom.IsAlive()", "contents" : "IsAlive()"},
				{"trigger": "C4DAtom.CheckType(id)", "contents" : "CheckType(${1:id})"},
				{"trigger": "C4DAtom.IsInstanceOf()", "contents" : "IsInstanceOf()"},
				{"trigger": "C4DAtom.GetType()", "contents" : "GetType()"},
				{"trigger": "C4DAtom.GetRealType()", "contents" : "GetRealType()"},
				{"trigger": "C4DAtom.GetClassification()", "contents" : "GetClassification()"},
				{"trigger": "C4DAtom.Message(type[, data])", "contents" : "Message(${1:type} ${2:[, data]})"},
				{"trigger": "C4DAtom.MultiMessage(flags, type[, data])", "contents" : "MultiMessage(${1:flags}, ${2:type} ${3:[, data]})"},
				{"trigger": "C4DAtom.CopyTo(dst, flags[, trn=None])", "contents" : "CopyTo(${1:dst}, ${2:flags} ${3:[, trn=None]})"},
				{"trigger": "C4DAtom.GetClone([flags=c4d.COPYFLAGS_0, trn=None])", "contents" : "${1:COPYFLAGS_0}, trn=None])"},
				{"trigger": "C4DAtom.Write(hf)", "contents" : "Write(${1:hf})"},
				{"trigger": "C4DAtom.Read(hf, id, level)", "contents" : "Read(${1:hf}, ${2:id}, ${3:level})"},
				{"trigger": "C4DAtom.WriteObject(hf)", "contents" : "WriteObject(${1:hf})"},
				{"trigger": "C4DAtom.ReadObject(hf, readheader)", "contents" : "ReadObject(${1:hf}, ${2:readheader})"},
				{"trigger": "C4DAtom.GetDescription(flags)", "contents" : "GetDescription(${1:flags})"},
				{"trigger": "C4DAtom.GetParameter(id, flags)", "contents" : "GetParameter(${1:id}, ${2:flags})"},
				{"trigger": "C4DAtom.SetParameter(id, data, flags)", "contents" : "SetParameter(${1:id}, ${2:data}, ${3:flags})"},
				{"trigger": "C4DAtom.FindUniqueID(appid)", "contents" : "FindUniqueID(${1:appid})"},
				{"trigger": "C4DAtom.AddUniqueID(appid, mem)", "contents" : "AddUniqueID(${1:appid}, ${2:mem})"},
				{"trigger": "C4DAtom.GetUniqueIDCount()", "contents" : "GetUniqueIDCount()"},
				{"trigger": "C4DAtom.GetUniqueIDIndex(idx)", "contents" : "GetUniqueIDIndex(${1:idx})"},
  				{ "trigger": "____zdummy", "contents": "_____zdummy" } 
		]
}