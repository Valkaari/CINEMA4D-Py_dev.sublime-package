{
		"scope" : "source.pythonAPI.cinema4D",
		"completions" : [
 				{"trigger": "c4d.documents.BaseDocument", "contents" : "BaseDocument"},
				{"trigger": "BaseDocument.__init__()", "contents" : "__init__()"},
				{"trigger": "BaseDocument.SetFps(fps)", "contents" : "SetFps(${1:fps})"},
				{"trigger": "BaseDocument.GetFps()", "contents" : "GetFps()"},
				{"trigger": "BaseDocument.SetLOD(lod)", "contents" : "SetLOD(${1:lod})"},
				{"trigger": "BaseDocument.GetLOD()", "contents" : "GetLOD()"},
				{"trigger": "BaseDocument.GetRenderLod()", "contents" : "GetRenderLod()"},
				{"trigger": "BaseDocument.SetRenderLod(lod)", "contents" : "SetRenderLod(${1:lod})"},
				{"trigger": "BaseDocument.GetDrawTime()", "contents" : "GetDrawTime()"},
				{"trigger": "BaseDocument.GetLayerObjectRoot()", "contents" : "GetLayerObjectRoot()"},
				{"trigger": "BaseDocument.GetSplinePlane()", "contents" : "GetSplinePlane()"},
				{"trigger": "BaseDocument.SetRewind([flags=0])", "contents" : "SetRewind( ${1:[flags=0]})"},
				{"trigger": "BaseDocument.GetBaseDrawCount()", "contents" : "GetBaseDrawCount()"},
				{"trigger": "BaseDocument.Flush()", "contents" : "Flush()"},
				{"trigger": "BaseDocument.SetDocumentName(name)", "contents" : "SetDocumentName(${1:name})"},
				{"trigger": "BaseDocument.SetDocumentPath(path)", "contents" : "SetDocumentPath(${1:path})"},
				{"trigger": "BaseDocument.GetDocumentName()", "contents" : "GetDocumentName()"},
				{"trigger": "BaseDocument.GetDocumentPath()", "contents" : "GetDocumentPath()"},
				{"trigger": "BaseDocument.GetParticleSystem()", "contents" : "GetParticleSystem()"},
				{"trigger": "BaseDocument.ForceCreateBaseDraw()", "contents" : "ForceCreateBaseDraw()"},
				{"trigger": "BaseDocument.ExecutePasses(bt, animation, expressions, caches, flags)", "contents" : "ExecutePasses(${1:bt}, ${2:animation}, ${3:expressions}, ${4:caches}, ${5:flags})"},
				{"trigger": "BaseDocument.FindSceneHook(id)", "contents" : "FindSceneHook(${1:id})"},
				{"trigger": "BaseDocument.StartUndo()", "contents" : "StartUndo()"},
				{"trigger": "BaseDocument.AddUndo(type, data[, allowFromThread=False])", "contents" : "AddUndo(${1:type}, ${2:data} ${3:[, allowFromThread=False]})"},
				{"trigger": "BaseDocument.GetUndoPtr()", "contents" : "GetUndoPtr()"},
				{"trigger": "BaseDocument.FlushUndoBuffer()", "contents" : "FlushUndoBuffer()"},
				{"trigger": "BaseDocument.FindUndoPtr(bl, type)", "contents" : "FindUndoPtr(${1:bl}, ${2:type})"},
				{"trigger": "BaseDocument.DoRedo()", "contents" : "DoRedo()"},
				{"trigger": "BaseDocument.DoUndo([multiple=False])", "contents" : "DoUndo( ${1:[multiple=False]})"},
				{"trigger": "BaseDocument.EndUndo()", "contents" : "EndUndo()"},
				{"trigger": "BaseDocument.RecordKey(op, id[, time, undo, autoKey, eval_attribmanager])", "contents" : "RecordKey(${1:op}, ${2:id} ${3:[, 4:time, 5:undo, 6:autoKey, eval_attribmanager]})"},
				{"trigger": "BaseDocument.AutoKey(op, undo[, recursive, pos, scale, rot, param, pla])", "contents" : "AutoKey(${1:op}, ${2:undo} ${3:[, 4:recursive, 5:pos, 6:scale, 7:rot, 8:param, pla]})"},
				{"trigger": "BaseDocument.AnimateObject(op, time, flags)", "contents" : "AnimateObject(${1:op}, ${2:time}, ${3:flags})"},
				{"trigger": "BaseDocument.Polygonize([keepanimation=False])", "contents" : "Polygonize( ${1:[keepanimation=False]})"},
				{"trigger": "BaseDocument.SetMinTime(time)", "contents" : "SetMinTime(${1:time})"},
				{"trigger": "BaseDocument.SetMaxTime(time)", "contents" : "SetMaxTime(${1:time})"},
				{"trigger": "BaseDocument.GetMinTime()", "contents" : "GetMinTime()"},
				{"trigger": "BaseDocument.GetMaxTime()", "contents" : "GetMaxTime()"},
				{"trigger": "BaseDocument.GetTime()", "contents" : "GetTime()"},
				{"trigger": "BaseDocument.SetTime(time)", "contents" : "SetTime(${1:time})"},
				{"trigger": "BaseDocument.GetLoopMinTime()", "contents" : "GetLoopMinTime()"},
				{"trigger": "BaseDocument.SetLoopMinTime(time)", "contents" : "SetLoopMinTime(${1:time})"},
				{"trigger": "BaseDocument.GetLoopMaxTime()", "contents" : "GetLoopMaxTime()"},
				{"trigger": "BaseDocument.SetLoopMaxTime(time)", "contents" : "SetLoopMaxTime(${1:time})"},
				{"trigger": "BaseDocument.SetActiveObject(op[, mode=SELECTION_NEW])", "contents" : "SetActiveObject(${1:op} ${2:[, mode=SELECTION_NEW]})"},
				{"trigger": "BaseDocument.SetActiveTag(tag[, mode=SELECTION_NEW])", "contents" : "SetActiveTag(${1:tag} ${2:[, mode=SELECTION_NEW]})"},
				{"trigger": "BaseDocument.SetActiveMaterial(mp[, mode=SELECTION_NEW])", "contents" : "SetActiveMaterial(${1:mp} ${2:[, mode=SELECTION_NEW]})"},
				{"trigger": "BaseDocument.SetActiveRenderData(rd)", "contents" : "SetActiveRenderData(${1:rd})"},
				{"trigger": "BaseDocument.GetAllTextures([isNet=False, ar=None])", "contents" : "GetAllTextures( ${1:[isNet=2:False, ar=None]})"},
				{"trigger": "BaseDocument.SetAction(a)", "contents" : "SetAction(${1:a})"},
				{"trigger": "BaseDocument.GetAction()", "contents" : "GetAction()"},
				{"trigger": "BaseDocument.GetActiveToolData()", "contents" : "GetActiveToolData()"},
				{"trigger": "BaseDocument.SetMode(m)", "contents" : "SetMode(${1:m})"},
				{"trigger": "BaseDocument.GetMode()", "contents" : "GetMode()"},
				{"trigger": "BaseDocument.IsEditMode()", "contents" : "IsEditMode()"},
				{"trigger": "BaseDocument.GetBaseDraw(bd)", "contents" : "GetBaseDraw(${1:bd})"},
				{"trigger": "BaseDocument.GetActiveBaseDraw()", "contents" : "GetActiveBaseDraw()"},
				{"trigger": "BaseDocument.GetRenderBaseDraw()", "contents" : "GetRenderBaseDraw()"},
				{"trigger": "BaseDocument.GetActiveTag()", "contents" : "GetActiveTag()"},
				{"trigger": "BaseDocument.GetMaterials()", "contents" : "GetMaterials()"},
				{"trigger": "BaseDocument.GetActiveObject()", "contents" : "GetActiveObject()"},
				{"trigger": "BaseDocument.GetActiveRenderData()", "contents" : "GetActiveRenderData()"},
				{"trigger": "BaseDocument.GetFirstRenderData()", "contents" : "GetFirstRenderData()"},
				{"trigger": "BaseDocument.InsertRenderData(rd[, pred=None])", "contents" : "InsertRenderData(${1:rd} ${2:[, pred=None]})"},
				{"trigger": "BaseDocument.InsertRenderDataLast(rd)", "contents" : "InsertRenderDataLast(${1:rd})"},
				{"trigger": "BaseDocument.GetActiveMaterial()", "contents" : "GetActiveMaterial()"},
				{"trigger": "BaseDocument.GetData([type])", "contents" : "GetData( ${1:[type]})"},
				{"trigger": "BaseDocument.GetDocumentData()", "contents" : "GetDocumentData()"},
				{"trigger": "BaseDocument.SetDocumentData(type, bc)", "contents" : "SetDocumentData(${1:type}, ${2:bc})"},
				{"trigger": "BaseDocument.GetSettingsInstance(type)", "contents" : "GetSettingsInstance(${1:type})"},
				{"trigger": "BaseDocument.GetFirstObject()", "contents" : "GetFirstObject()"},
				{"trigger": "BaseDocument.GetFirstMaterial()", "contents" : "GetFirstMaterial()"},
				{"trigger": "BaseDocument.GetActiveMaterials()", "contents" : "GetActiveMaterials()"},
				{"trigger": "BaseDocument.GetOrderedActiveObjects()", "contents" : "GetOrderedActiveObjects()"},
				{"trigger": "BaseDocument.GetActiveObjects(flags)", "contents" : "GetActiveObjects(${1:flags})"},
				{"trigger": "BaseDocument.GetActiveTags()", "contents" : "GetActiveTags()"},
				{"trigger": "BaseDocument.GetSelection()", "contents" : "GetSelection()"},
				{"trigger": "BaseDocument.GetActiveObjectsFilter(children, type, instanceof)", "contents" : "GetActiveObjectsFilter(${1:children}, ${2:type}, ${3:instanceof})"},
				{"trigger": "BaseDocument.GetObjects()", "contents" : "GetObjects()"},
				{"trigger": "BaseDocument.SetSelection(bl[, mode=SELECTION_NEW])", "contents" : "SetSelection(${1:bl} ${2:[, mode=SELECTION_NEW]})"},
				{"trigger": "BaseDocument.SearchMaterial(name)", "contents" : "SearchMaterial(${1:name})"},
				{"trigger": "BaseDocument.SearchMaterialInc(name)", "contents" : "SearchMaterialInc(${1:name})"},
				{"trigger": "BaseDocument.SearchObject(name)", "contents" : "SearchObject(${1:name})"},
				{"trigger": "BaseDocument.SearchObjectInc(name)", "contents" : "SearchObjectInc(${1:name})"},
				{"trigger": "BaseDocument.GetHighest(type, editor)", "contents" : "GetHighest(${1:type}, ${2:editor})"},
				{"trigger": "BaseDocument.InsertObject(op[, parent=None, pred=None, checknames=False])", "contents" : "InsertObject(${1:op} ${2:[, parent=3:None, pred=4:None, checknames=False]})"},
				{"trigger": "BaseDocument.InsertMaterial(op[, pred=None, checknames=None])", "contents" : "InsertMaterial(${1:op} ${2:[, pred=3:None, checknames=None]})"},
				{"trigger": "BaseDocument.GetHelperAxis()", "contents" : "GetHelperAxis()"},
				{"trigger": "BaseDocument.GetChanged()", "contents" : "GetChanged()"},
				{"trigger": "BaseDocument.SetChanged()", "contents" : "SetChanged()"},
				{"trigger": "BaseDocument.IsAxisEnabled()", "contents" : "IsAxisEnabled()"},
				{"trigger": "BaseDocument.SendInfo(type, format, fn, bl, hooks_only)", "contents" : "SendInfo(${1:type}, ${2:format}, ${3:fn}, ${4:bl}, ${5:hooks_only})"},
				{"trigger": "BaseDocument.GetDocPreviewBitmap()", "contents" : "GetDocPreviewBitmap()"},
				{"trigger": "BaseDocument.GetTakeData()", "contents" : "GetTakeData()"},
				{"trigger": "BaseDocument.GetTargetObject()", "contents" : "GetTargetObject()"},
				{"trigger": "BaseDocument.SetTargetObject(op)", "contents" : "SetTargetObject(${1:op})"},
  				{ "trigger": "____zdummy", "contents": "_____zdummy" } 
		]
}