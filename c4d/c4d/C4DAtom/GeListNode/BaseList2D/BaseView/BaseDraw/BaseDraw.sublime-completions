{
		"scope" : "source.pythonAPI.cinema4D",
		"completions" : [
 				{"trigger": "c4d.BaseDraw", "contents" : "BaseDraw"},
				{"trigger": "BaseDraw.GetParameterData(id)", "contents" : "GetParameterData(${1:id})"},
				{"trigger": "BaseDraw.GetFrameScreen()", "contents" : "GetFrameScreen()"},
				{"trigger": "BaseDraw.HasCameraLink()", "contents" : "HasCameraLink()"},
				{"trigger": "BaseDraw.SetSceneCamera([op=None][, animate=False])", "contents" : "SetSceneCamera( ${1:[op=None]} ${2:[, animate=False]})"},
				{"trigger": "BaseDraw.GetSceneCamera(doc)", "contents" : "GetSceneCamera(${1:doc})"},
				{"trigger": "BaseDraw.GetEditorCamera(doc)", "contents" : "GetEditorCamera(${1:doc})"},
				{"trigger": "BaseDraw.GetDisplayFilter()", "contents" : "GetDisplayFilter()"},
				{"trigger": "BaseDraw.GetEditState()", "contents" : "GetEditState()"},
				{"trigger": "BaseDraw.IsViewOpen(doc)", "contents" : "IsViewOpen(${1:doc})"},
				{"trigger": "BaseDraw.InitializeView(doc, cam, editorsv)", "contents" : "InitializeView(${1:doc}, ${2:cam}, ${3:editorsv})"},
				{"trigger": "BaseDraw.InitClipbox(left, top, right, bottom, flags)", "contents" : "InitClipbox(${1:left}, ${2:top}, ${3:right}, ${4:bottom}, ${5:flags})"},
				{"trigger": "BaseDraw.InitView(camera, op_m, sv, pix_x, pix_y, fitview)", "contents" : "InitView(${1:camera}, ${2:op_m}, ${3:sv}, ${4:pix_x}, ${5:pix_y}, ${6:fitview})"},
				{"trigger": "BaseDraw.AddToPostPass(op, bh)", "contents" : "AddToPostPass(${1:op}, ${2:bh})"},
				{"trigger": "BaseDraw.GetObjectColor(bh, op)", "contents" : "GetObjectColor(${1:bh}, ${2:op})"},
				{"trigger": "BaseDraw.CheckColor(col)", "contents" : "CheckColor(${1:col})"},
				{"trigger": "BaseDraw.SetTransparency(trans)", "contents" : "SetTransparency(${1:trans})"},
				{"trigger": "BaseDraw.GetTransparency()", "contents" : "GetTransparency()"},
				{"trigger": "BaseDraw.PointInRange(p, x, y)", "contents" : "PointInRange(${1:p}, ${2:x}, ${3:y})"},
				{"trigger": "BaseDraw.SetPen(col[, flags=0])", "contents" : "SetPen(${1:col} ${2:[, flags=0]})"},
				{"trigger": "BaseDraw.SetPointSize(pointsize)", "contents" : "SetPointSize(${1:pointsize})"},
				{"trigger": "BaseDraw.SimpleShade(p, n)", "contents" : "SimpleShade(${1:p}, ${2:n})"},
				{"trigger": "BaseDraw.ConvertColor(c)", "contents" : "ConvertColor(${1:c})"},
				{"trigger": "BaseDraw.ConvertColorReverse(c)", "contents" : "ConvertColorReverse(${1:c})"},
				{"trigger": "BaseDraw.LineZOffset(offset)", "contents" : "LineZOffset(${1:offset})"},
				{"trigger": "BaseDraw.SetDepth(enable)", "contents" : "SetDepth(${1:enable})"},
				{"trigger": "BaseDraw.SetMatrix_Projection()", "contents" : "SetMatrix_Projection()"},
				{"trigger": "BaseDraw.SetMatrix_Screen([offset==-1])", "contents" : "SetMatrix_Screen( ${1:[offset==-1]})"},
				{"trigger": "BaseDraw.SetMatrix_Camera()", "contents" : "SetMatrix_Camera()"},
				{"trigger": "BaseDraw.SetMatrix_Matrix(op, mg[, zoffset])", "contents" : "SetMatrix_Matrix(${1:op}, ${2:mg} ${3:[, zoffset]})"},
				{"trigger": "BaseDraw.SetClipPlaneOffset(o)", "contents" : "SetClipPlaneOffset(${1:o})"},
				{"trigger": "BaseDraw.DrawPoint2D(p)", "contents" : "DrawPoint2D(${1:p})"},
				{"trigger": "BaseDraw.DrawLine2D(p1, p2)", "contents" : "DrawLine2D(${1:p1}, ${2:p2})"},
				{"trigger": "BaseDraw.DrawHandle2D(p[, type=DRAWHANDLE_SMALL])", "contents" : "DrawHandle2D(${1:p} ${2:[, type=DRAWHANDLE_SMALL]})"},
				{"trigger": "BaseDraw.DrawCircle2D(mx, my, rad)", "contents" : "DrawCircle2D(${1:mx}, ${2:my}, ${3:rad})"},
				{"trigger": "BaseDraw.DrawLine(p1, p2, flags)", "contents" : "DrawLine(${1:p1}, ${2:p2}, ${3:flags})"},
				{"trigger": "BaseDraw.DrawHandle(vp, type, flags)", "contents" : "DrawHandle(${1:vp}, ${2:type}, ${3:flags})"},
				{"trigger": "BaseDraw.DrawPoints(vp[, vc][, colcnt=0][, vn])", "contents" : "DrawPoints(${1:vp} ${2:[, vc]} ${3:[, colcnt=0]} ${4:[, vn]})"},
				{"trigger": "BaseDraw.DrawTexture(bmp, padr4, cadr, vnadr, uvadr, pntcnt, alphamode, flags)", "contents" : "DrawTexture(${1:bmp}, ${2:padr4}, ${3:cadr}, ${4:vnadr}, ${5:uvadr}, ${6:pntcnt}, ${7:alphamode}, ${8:flags})"},
				{"trigger": "BaseDraw.DrawBox(m, size, col, wire)", "contents" : "DrawBox(${1:m}, ${2:size}, ${3:col}, ${4:wire})"},
				{"trigger": "BaseDraw.DrawCircle(m)", "contents" : "DrawCircle(${1:m})"},
				{"trigger": "BaseDraw.DrawArc(pos, radius, angle_start, angle_end[, subdiv=32, flags=0])", "contents" : "DrawArc(${1:pos}, ${2:radius}, ${3:angle_start}, ${4:angle_end} ${5:[, subdiv=6:32, flags=0]})"},
				{"trigger": "BaseDraw.DrawPolygon(p, f)", "contents" : "DrawPolygon(${1:p}, ${2:f})"},
				{"trigger": "BaseDraw.DrawSphere(off, size, col, flags)", "contents" : "DrawSphere(${1:off}, ${2:size}, ${3:col}, ${4:flags})"},
				{"trigger": "BaseDraw.DrawArrayEnd()", "contents" : "DrawArrayEnd()"},
				{"trigger": "BaseDraw.DrawPolygonObject(bh, op, flags)", "contents" : "DrawPolygonObject(${1:bh}, ${2:op}, ${3:flags})"},
				{"trigger": "BaseDraw.DrawObject(bh, op, flags, drawpass, parent)", "contents" : "DrawObject(${1:bh}, ${2:op}, ${3:flags}, ${4:drawpass}, ${5:parent})"},
				{"trigger": "BaseDraw.DrawScene(flags)", "contents" : "DrawScene(${1:flags})"},
				{"trigger": "BaseDraw.GetReductionMode()", "contents" : "GetReductionMode()"},
				{"trigger": "BaseDraw.GetDrawPass()", "contents" : "GetDrawPass()"},
				{"trigger": "BaseDraw.SetLightList(mode)", "contents" : "SetLightList(${1:mode})"},
				{"trigger": "BaseDraw.InitUndo(doc)", "contents" : "InitUndo(${1:doc})"},
				{"trigger": "BaseDraw.DoUndo(doc)", "contents" : "DoUndo(${1:doc})"},
				{"trigger": "BaseDraw.SetDrawParam(id, data)", "contents" : "SetDrawParam(${1:id}, ${2:data})"},
				{"trigger": "BaseDraw.GetDrawParam(id)", "contents" : "GetDrawParam(${1:id})"},
				{"trigger": "BaseDraw.TestBreak(id)", "contents" : "TestBreak(${1:id})"},
				{"trigger": "BaseDraw.GetEditorWindow(id)", "contents" : "GetEditorWindow(${1:id})"},
				{"trigger": "BaseDraw.SetTexture(bm, tile, alphamode, flags)", "contents" : "SetTexture(${1:bm}, ${2:tile}, ${3:alphamode}, ${4:flags})"},
				{"trigger": "BaseDraw.GetGridStep()", "contents" : "GetGridStep()"},
				{"trigger": "BaseDraw.GetViewMatrix(n)", "contents" : "GetViewMatrix(${1:n})"},
  				{ "trigger": "____zzzzzdummy", "contents": "_____zzzzzdummy" } 
		]
}