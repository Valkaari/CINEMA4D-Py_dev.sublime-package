{
		"scope" : "source.pythonAPI.cinema4D",
		"completions" : [
 				{"trigger": "c4d.Matrix", "contents" : "Matrix"},
				{"trigger": "Matrix.v1", "contents" : "v1"},
				{"trigger": "Matrix.v2", "contents" : "v2"},
				{"trigger": "Matrix.v3", "contents" : "v3"},
				{"trigger": "Matrix.off", "contents" : "off"},
				{"trigger": "Matrix.__init__([off=Vector(0)[, v1=Vector(1, 0, 0)[, v2=Vector(0, 1, 0)[, v3=Vector(0, 0, 1)]]]])", "contents" : "__init__( ${1:[off=Vector(2:0)[, v1=Vector(3:1, 4:0, 5:0)[, v2=Vector(6:0, 7:1, 8:0)[, v3=Vector(9:0, 10:0, 11:1)]}]]])"},
				{"trigger": "Matrix.__str__()", "contents" : "__str__()"},
				{"trigger": "Matrix.__add__(self, other)", "contents" : "__add__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__radd__(self, other)", "contents" : "__radd__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__sub__(self, other)", "contents" : "__sub__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__rsub__(self, other)", "contents" : "__rsub__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__mul__(self, other)", "contents" : "__mul__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__rmul__(self, other)", "contents" : "__rmul__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__div__(self, other)", "contents" : "__div__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.__invert__()", "contents" : "__invert__()"},
				{"trigger": "Matrix.__eq__(other)", "contents" : "__eq__(${1:other})"},
				{"trigger": "Matrix.__ne__(self, other)", "contents" : "__ne__(${1:self}, ${2:other})"},
				{"trigger": "Matrix.Normalize()", "contents" : "Normalize()"},
				{"trigger": "Matrix.GetNormalized()", "contents" : "GetNormalized()"},
				{"trigger": "Matrix.Mul(v)", "contents" : "Mul(${1:v})"},
				{"trigger": "Matrix.MulV(v)", "contents" : "MulV(${1:v})"},
				{"trigger": "Matrix.GetTensorMatrix()", "contents" : "GetTensorMatrix()"},
				{"trigger": "Matrix.Scale(v)", "contents" : "Scale(${1:v})"},
  				{ "trigger": "____zzzzzdummy", "contents": "_____zzzzzdummy" } 
		]
}